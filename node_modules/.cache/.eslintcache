[{"/Users/apple/Desktop/todo2/src/index.js":"1","/Users/apple/Desktop/todo2/src/App.js":"2","/Users/apple/Desktop/todo2/src/components/Header/index.jsx":"3","/Users/apple/Desktop/todo2/src/components/AddTodo/index.jsx":"4","/Users/apple/Desktop/todo2/src/components/TodoList/index.jsx":"5"},{"size":232,"mtime":1673949130007,"results":"6","hashOfConfig":"7"},{"size":544,"mtime":1673889429092,"results":"8","hashOfConfig":"7"},{"size":306,"mtime":1673889490693,"results":"9","hashOfConfig":"7"},{"size":1115,"mtime":1673889280428,"results":"10","hashOfConfig":"7"},{"size":2034,"mtime":1673949833146,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"tv1i6w",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"/Users/apple/Desktop/todo2/src/index.js",[],[],"/Users/apple/Desktop/todo2/src/App.js",[],[],"/Users/apple/Desktop/todo2/src/components/Header/index.jsx",[],[],"/Users/apple/Desktop/todo2/src/components/AddTodo/index.jsx",["29"],[],"import React from \"react\";\nimport styles from \"./AddTodo.module.scss\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { TodosContext } from \"../../App\";\n\nconst AddTodo = () => {\n  const { todos, setTodos } = React.useContext(TodosContext);\n  const [value, setValue] = React.useState(\"\");\n  const refInput = React.useRef(\"\");\n\n  const SaveTodo = () => {\n    const newArr = [\n      ...todos,\n      {\n        id: uuidv4(),\n        title: value,\n      },\n    ];\n    {\n      value.length > 0 && setTodos(newArr);\n    }\n    setValue(\"\");\n    refInput.current.focus();\n  };\n  console.log(todos);\n  return (\n    <div>\n      <div className={styles.root}>\n        <input\n          ref={refInput}\n          value={value}\n          onChange={(event) => setValue(event.target.value)}\n          className={styles.input}\n          placeholder=\" Введите задачу ...\"\n        />\n        <img\n          onClick={() => SaveTodo()}\n          src=\"https://cdn-icons-png.flaticon.com/512/1280/1280891.png\"\n          alt=\"logo\"\n          className={styles.img}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default AddTodo;\n","/Users/apple/Desktop/todo2/src/components/TodoList/index.jsx",["30"],[],"import React from \"react\";\nimport styles from \"./TodoList.module.scss\";\nimport { TodosContext } from \"../../App\";\n\nconst TodoList = () => {\n  const { todos, setTodos } = React.useContext(TodosContext);\n  const [edit, setEdit] = React.useState(null);\n  const [value, setValue] = React.useState(\"\");\n\n  const removeTodo = (id) => {\n    const newArr = todos.filter((item) => item.id !== id);\n    setTodos(newArr);\n  };\n\n  const onClickSave = (id) => {\n    const newArr = todos.map((item) => {\n      if (item.id === id) {\n        item.title = value;\n      }\n      return item;\n    });\n    setEdit(null);\n  };\n\n  const onClickEdit = (id, title) => {\n    setEdit(id);\n    setValue(title);\n  };\n\n  return (\n    <div className={styles.overflow}>\n      {todos.map((item, index) => (\n        <div key={item.id} className={styles.root}>\n          {`${index + 1}) `}\n          {edit === item.id ? (\n            <input\n              className={styles.input}\n              value={value}\n              onChange={(e) => setValue(e.target.value)}\n            />\n          ) : (\n            <>{item.title}</>\n          )}\n          {edit === item.id ? (\n            <img\n              onClick={() => onClickSave(item.id)}\n              className={styles.img3}\n              src=\"https://cdn-icons-png.flaticon.com/512/1280/1280891.png\"\n              alt=\"logo\"\n            />\n          ) : (\n            <>\n              <img\n                onClick={() => removeTodo(item.id)}\n                className={styles.img1}\n                src=\"https://www.nicepng.com/png/detail/362-3620680_delete-icon-png-download-.png\"\n                alt=\"logo\"\n              />\n              <img\n                onClick={() => onClickEdit(item.id, item.title)}\n                className={styles.img2}\n                src=\"https://simg.nicepng.com/png/small/810-8105676_png-file-svg-transparent-background-edit-icons-png.png\"\n                alt=\"logo\"\n              />\n            </>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default TodoList;\n",{"ruleId":"31","severity":1,"message":"32","line":19,"column":5,"nodeType":"33","messageId":"34","endLine":21,"endColumn":6},{"ruleId":"35","severity":1,"message":"36","line":16,"column":11,"nodeType":"37","messageId":"38","endLine":16,"endColumn":17},"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-unused-vars","'newArr' is assigned a value but never used.","Identifier","unusedVar"]